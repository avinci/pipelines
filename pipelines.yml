template: true   # required for local templates
valuesFilePath: ./values.yml

resources:
  - name: pipe_repo
    type: GitRepo
    configuration:
      # SCM integration where the repository is located
      gitProvider: {{ .Values.myRepo.gitProvider }} # this will be replaced from values.yml
      # Repository path, including org name/repo name
      path: {{ .Values.myRepo.path }} # this will be replaced from values.yml
      branches:
        # Specifies which branches will trigger dependent steps
        include: master

  - name: docker_prod_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: bsArt
      buildName: dockerBuild
      buildNumber: 1

  - name: release_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: distribution
      name: demo_docker
      version: v1.0.0

  - name: signed_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: distribution
      name: demo_docker
      version: v1.0.0

  - name: distribution_rules
    type: DistributionRule
    configuration:
      sourceDistribution: distribution
      serviceName: "*"
      siteName: "*"
      cityName: "*"
      countryCodes:
        - "CN"
        - "GB"

pipelines:
  - name: pipe_sample
    configuration:
      environmentVariables:
        readOnly:
          pipeOne: 1
          pipeTwo: 2
    steps:
      - name: step1
        type: Bash
        configuration:
          environmentVariables:
            stepOne: 3
            stepTwo: 4
          inputResources:
            # Sets up step to be triggered when there are commit events to myFirstRepo
            - name: pipe_repo
        execution:
          onExecute:
            # Data from input resources is available as env variables in the step
            - echo $res_pipe_repo_commitSha
            # The next two commands add variables to run state, which is available to all downstream steps in this run
            # Run state documentation: https://www.jfrog.com/confluence/display/JFROG/Creating+Stateful+Pipelines#CreatingStatefulPipelines-RunState
            - add_run_variables current_runid=$run_id
            - add_run_variables commitSha=$res_pipe_repo_commitSha

      - name: step2
        type: Bash
        configuration:
          nodePool: k8nodes
          inputSteps:
            - name: step1
        execution:
          onExecute:
            # Demonstrates the availability of an env variable written to run state during step1
            - echo $current_runid
            - echo "commitSha is $commitSha"

  - name: win_sample
    configuration:
      environmentVariables:
        readOnly:
          pipeOne: 1
    steps:
      - name: test
        type: PowerShell
        configuration:
          nodePool: w19-static
        execution:
          onExecute:
            - write-output  "executing step..."

  - name: docker_prod_pipeline
    steps:
      - name: docker_promote_build
        type: PromoteBuild
        configuration:
          failOnValidate: true
          copy: true
          targetRepository: docker-prod-local
          comment: "promoted via pipeline ${pipeline_name} in run number ${run_number}"
          integrations:
            - name: bsArt
          inputResources:
            - name: docker_dev_build_info
              trigger: false
          outputResources:
            - name: docker_prod_build_info

      - name: bundle
        type: CreateReleaseBundle
        configuration:
          releaseBundleName: demo_docker
          releaseBundleVersion: v1.0.${run_number}
          dryRun: false
          sign: false
          description: "some random test description"
          inputResources:
            - name: docker_prod_build_info
            - name: mvn_build_info
              trigger: false
          outputResources:
            - name: release_bundle
          releaseNotes:
            syntax: markdown
            content: |
              ## Heading
                * Bullet
                * Points

      - name: sign
        type: SignReleaseBundle
        configuration:
          inputResources:
            - name: release_bundle
          outputResources:
            - name: signed_bundle

      - name: distribute
        type: DistributeReleaseBundle
        configuration:
          dryRun: false
          inputResources:
            - name: signed_bundle
              trigger: false
            - name: distribution_rules

  - name: extensions_sample
    steps:
      - name: down_001
        type: DownloadTar
        syntaxVersion: 1.0.0
        configuration:
          downloadURL: https://github.com/devops-recipes/app-mono/tarball/master
          downloadPath: monoRepo

#      - name: down_002
#        type: DownloadTar
#        syntaxVersion: 0.0.2
#        configuration:
#          inputSteps:
#            - name: down_001
#          downloadURL: https://github.com/devops-recipes/app-mono/tarball/master
#          downloadPath: monoRepo
#          doUnzip: true
